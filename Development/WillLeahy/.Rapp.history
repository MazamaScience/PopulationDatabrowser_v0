### This is the development file for the PoplationPlot.R that will be a part of the actual databrowser.#
#
#List of information from user interface#
createInfoList <- function(){#
  return (list(responseType = 'json', plotWidth = '500', language = 'fr', #
               countryCode = 'CI', countryTitle = "Côte d’Ivoire", plotType = 'PopulationPlot', projection = T))#
}#
infoList <- createInfoList()#
#List of text used for plotting#
createTextList <- function(infoList) {#
  json_file <- "../../databrowser/data_local/language.json"#
  json_data <- fromJSON(json_file)#
  rtxt <- json_data[[infoList$language]]$rtxt#
  text <- list(main_title = paste(enc2utf8(rtxt[["main_title"]], ": ", infoList$countryTitle, sep=''),#
               ylab1 = rtxt[["ylab1"]],#
               ylab2 = rtxt[["ylab2"]],#
               subtitle = rtxt[["subtitle"]],#
               subhead1 = rtxt[["subhead1"]],#
               subhead2 = rtxt[["subhead2"]],#
               million = rtxt[["million"]],#
               thousand = rtxt[["thousand"]])#
  return(text)#
}#
textList <- createTextList(infoList)#
#
#List of data objects#
createDataList <- function() {#
  df = read.csv("MidYearPop.csv")#
  # Create dataList#
  data <- list(df)#
  return(data)#
}#
dataList <- createDataList()#
#
png('test.png', width = 550, height = 700)#
#
oma = c(0,1,1,0)#
mar <- c(4,4,4,1) + 0.1 # default is c(5,4,4,2)+0.1#
par(mar=mar, oma=oma)#
#
df = dataList[[1]]#
##########################################
### style section#
##########################################
#
lineWidth <- 1 #width of standard plot#
axisSize <- 1 # cex of numbers on axes#
axisLine <-0.7 # distance of axes from plot#
labSize <- 1.2 # text size of axis labels#
labLine <- 3.3 # distance of labels from plot#
tick <- -0.02 # width of axis ticks#
gridWidth <- 1 # width of gridlines#
#colors <- brewer.pal(length(countryCodes), "Blues")#
##########################################
### function that makes the population plot#
##########################################
#
popPlot <- function(dataList, infoList, textList){#
  ### create a mask to hide projected population#
  if(infoList$projection) {#
    projMask <- df$year <= 2020#
  } else {#
    projMask <- df$year <= 2014#
  }#
  years <- df$year[projMask]#
  ### if there are multiple country codes add their populations#
  if(length(infoList$countryCode)>1) {#
    population <- apply(df[,infoList$countryCode], 1, sum)[projMask]#
  } else {#
    population <- df[,infoList$countryCode][projMask]#
  }#
  ### find maximum population#
  pMax <- max(population)#
  ### adjust labels and population if max population is over/under 1,000,000#
  if(pMax < 1000000) {#
    textList$units <- textList$thousand#
    population <- population / 1000#
    pMax <- pMax / 1000#
  } else if(pMax > 1000000){#
    textList$units <- textList$million#
    population <- population / 1000000#
    pMax <- pMax / 1000000  #
  }#
  ### make year labels#
  yearLabs <- c(1950,1960,1970,1980,1990,2000,2010,2020,2030,2040)#
  yearAt <- c(0,10,20,30,40,50,60,70,80,90)#
  ### find growth for subtitle#
  oldPop <- population[match(2000, years)]#
  currentPop <- population[match(2014, years)]#
  percentGrowth <- round(100 * (currentPop - oldPop) / oldPop, digits=0)#
  textList$subhead1 <- paste(textList$subhead1, " ", percentGrowth, "% ", sep='')#
  ##########################################
  ### population over time line plot#
  ##########################################
  par(fig=c(0,1,0.455,1), yaxs='i', xaxs='i', new=TRUE, lty=0, mgp = c(0, 0.75, 0))#
  plot(years, population, type='s', lwd=2, col='black', #
       axes=FALSE, xlab=NA, ylab=NA, main=NA, lty=1,#
       ylim=range(0,pMax))#
  #draw polygon under line#
  y <- population#
  x <- years#
  y2 <- rep(y, each=2)#
  y2 <- y2[-length(y2)]#
  x2 <- rep(x, each=2)[-1]#
  x3 <- c(min(x2), x2, max(x2))#
  y3 <- c(0, y2, 0)#
  polygon(x3, y3, border=NA, col=rgb(0.9,0.9,0.9))#
  ### draw axes#
  axis(side=1, at=c(min(years),max(years)), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=1, at=yearLabs, labels=yearLabs, cex.axis=axisSize, lwd=0, lwd.ticks=1, line=axisLine, tck=tick)#
  axis(side=2, at=c(0,pMax), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=2, cex.axis=axisSize, line=axisLine, lwd=0, lwd.ticks=1, tck=tick, las=1)#
  ### axis label text#
  mtext(paste(textList$ylab1, " (", textList$units,")", sep=''), side=2, cex=labSize, line=labLine)#
  ### draw main text and subtitle text#
  mtext(textList$main_title, side=3, cex=labSize*1.4, line=labLine)#
  mtext(textList$subhead1, side=3, cex=labSize, line=labLine-1.3, font=3)#
  mtext(paste(textList$subhead2, round(population[length(population)], 1), textList$million, sep=' '), side=3, #
        cex=labSize, line=labLine-2.6, font=3)#
  # draw ablines up until the population line#
  for(i in seq(1,101,by=10)){#
    segments(years[i], 0, years[i], population[i], lwd=gridWidth, lty=3)#
  }#
  ### draw projection polygon#
  if(infoList$projection) {#
    y <- population[years > 2014]#
    x <- years[years > 2014]#
    y2 <- rep(y, each=2)#
    y2 <- y2[-length(y2)]#
    x2 <- rep(x, each=2)[-1]#
    x3 <- c(min(x2), x2, max(x2))#
    y3 <- c(0, y2, 0)#
    polygon(x3, y3, border=NA, col=rgb(0.95,0.95,0.95))#
  }#
  ##########################################
  ### change in population per year barplot#
  ##########################################
  par(fig=c(0,1,0,0.545), yaxs='i', xaxs='i', new=TRUE, lty=0)#
  ### calculate the percentage change from year to year#
  y <- diff(population)#
  y <- c(0, y)#
  percentChange <- 100 * y/population#
  ###for different colored bars#
  col1 <- '#91cebe'#
  col2 <- '#d8735b'#
  barColors <- c()#
  for(i in 1:length(percentChange)){#
    if(i > 64) {#
      barColors <- c(barColors, rgb(0.95,0.95,0.95))#
    }#
    else if(percentChange[i] > 0) {#
      barColors <- c(barColors, col1)#
    } else {#
      barColors <- c(barColors, col2)#
    }#
  }#
  ### make solid barplot of population change#
  barplot(head(percentChange, -1), space=0, axes=FALSE, #
          xlab=NA, ylab=NA, border=FALSE, col=barColors,#
          main=NA, ylim=range(-6, 10), xlim=range(0,length(years)-1), xpd=T)#
  ### draw axes#
  axis(side=3, at=c(0, length(percentChange)), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=3, at=yearAt, labels=FALSE, line=axisLine, lwd=0, lwd.ticks=1, tck=tick)#
  axis(side=2, at=c(-6,10), line=axisLine, lwd.ticks=0, labels=FALSE)#
  axis(side=2, las=1, lwd=0, at=c(-6,-4,-2,0,2,4,6,8,10), #
       labels=c("-6%","-4%","-2%","0%","2%","4%","6%","8%","10%"), #
       lwd.ticks=1, cex.axis=axisSize, line=axisLine, tck=tick)#
  ### draw axis label#
  mtext(textList$ylab2, side=2, cex=labSize, line=labLine)#
  # draw ablines up until the population line#
  for(i in seq(0,100,by=10)){#
    segments(i, max(0,percentChange[i+1]), i, 10, lwd=gridWidth, lty=3)#
  }#
  lines(head(percentChange, -1), type='S', lty=1, xpd=T)#
  # plot information at bottom#
   mtext(textList$subtitle, side=1, line=2, cex=labSize)#
}#
#
popPlot(dataList, infoList, textList)#
#
dev.off()
infoList
json_file <- "../../databrowser/data_local/language.json"
json_data <- fromJSON(json_file)
include(RJSONIO)
library(RJSONIO)
json_file <- "../../databrowser/data_local/language.json"
json_data <- fromJSON(json_file)
rtxt <- json_data[[infoList$language]]$rtxt
text <- list(main_title = paste(enc2utf8(rtxt[["main_title"]], ": ", infoList$countryTitle, sep=''),#
               ylab1 = rtxt[["ylab1"]],#
               ylab2 = rtxt[["ylab2"]],#
               subtitle = rtxt[["subtitle"]],#
               subhead1 = rtxt[["subhead1"]],#
               subhead2 = rtxt[["subhead2"]],#
               million = rtxt[["million"]],#
               thousand = rtxt[["thousand"]])
### This is the development file for the PoplationPlot.R that will be a part of the actual databrowser.#
#
#List of information from user interface#
createInfoList <- function(){#
  return (list(responseType = 'json', plotWidth = '500', language = 'fr', #
               countryCode = 'CI', countryTitle = "Côte d’Ivoire", plotType = 'PopulationPlot', projection = T))#
}#
infoList <- createInfoList()#
#List of text used for plotting#
createTextList <- function(infoList) {#
  json_file <- "../../databrowser/data_local/language.json"#
  json_data <- fromJSON(json_file)#
  rtxt <- json_data[[infoList$language]]$rtxt#
  text <- list(main_title = paste(rtxt[["main_title"]], ": ", infoList$countryTitle, sep=''),#
               ylab1 = rtxt[["ylab1"]],#
               ylab2 = rtxt[["ylab2"]],#
               subtitle = rtxt[["subtitle"]],#
               subhead1 = rtxt[["subhead1"]],#
               subhead2 = rtxt[["subhead2"]],#
               million = rtxt[["million"]],#
               thousand = rtxt[["thousand"]])#
  return(text)#
}#
textList <- createTextList(infoList)#
#
#List of data objects#
createDataList <- function() {#
  df = read.csv("MidYearPop.csv")#
  # Create dataList#
  data <- list(df)#
  return(data)#
}#
dataList <- createDataList()#
#
png('test.png', width = 550, height = 700)#
#
oma = c(0,1,1,0)#
mar <- c(4,4,4,1) + 0.1 # default is c(5,4,4,2)+0.1#
par(mar=mar, oma=oma)#
#
df = dataList[[1]]#
##########################################
### style section#
##########################################
#
lineWidth <- 1 #width of standard plot#
axisSize <- 1 # cex of numbers on axes#
axisLine <-0.7 # distance of axes from plot#
labSize <- 1.2 # text size of axis labels#
labLine <- 3.3 # distance of labels from plot#
tick <- -0.02 # width of axis ticks#
gridWidth <- 1 # width of gridlines#
#colors <- brewer.pal(length(countryCodes), "Blues")#
##########################################
### function that makes the population plot#
##########################################
#
popPlot <- function(dataList, infoList, textList){#
  ### create a mask to hide projected population#
  if(infoList$projection) {#
    projMask <- df$year <= 2020#
  } else {#
    projMask <- df$year <= 2014#
  }#
  years <- df$year[projMask]#
  ### if there are multiple country codes add their populations#
  if(length(infoList$countryCode)>1) {#
    population <- apply(df[,infoList$countryCode], 1, sum)[projMask]#
  } else {#
    population <- df[,infoList$countryCode][projMask]#
  }#
  ### find maximum population#
  pMax <- max(population)#
  ### adjust labels and population if max population is over/under 1,000,000#
  if(pMax < 1000000) {#
    textList$units <- textList$thousand#
    population <- population / 1000#
    pMax <- pMax / 1000#
  } else if(pMax > 1000000){#
    textList$units <- textList$million#
    population <- population / 1000000#
    pMax <- pMax / 1000000  #
  }#
  ### make year labels#
  yearLabs <- c(1950,1960,1970,1980,1990,2000,2010,2020,2030,2040)#
  yearAt <- c(0,10,20,30,40,50,60,70,80,90)#
  ### find growth for subtitle#
  oldPop <- population[match(2000, years)]#
  currentPop <- population[match(2014, years)]#
  percentGrowth <- round(100 * (currentPop - oldPop) / oldPop, digits=0)#
  textList$subhead1 <- paste(textList$subhead1, " ", percentGrowth, "% ", sep='')#
  ##########################################
  ### population over time line plot#
  ##########################################
  par(fig=c(0,1,0.455,1), yaxs='i', xaxs='i', new=TRUE, lty=0, mgp = c(0, 0.75, 0))#
  plot(years, population, type='s', lwd=2, col='black', #
       axes=FALSE, xlab=NA, ylab=NA, main=NA, lty=1,#
       ylim=range(0,pMax))#
  #draw polygon under line#
  y <- population#
  x <- years#
  y2 <- rep(y, each=2)#
  y2 <- y2[-length(y2)]#
  x2 <- rep(x, each=2)[-1]#
  x3 <- c(min(x2), x2, max(x2))#
  y3 <- c(0, y2, 0)#
  polygon(x3, y3, border=NA, col=rgb(0.9,0.9,0.9))#
  ### draw axes#
  axis(side=1, at=c(min(years),max(years)), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=1, at=yearLabs, labels=yearLabs, cex.axis=axisSize, lwd=0, lwd.ticks=1, line=axisLine, tck=tick)#
  axis(side=2, at=c(0,pMax), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=2, cex.axis=axisSize, line=axisLine, lwd=0, lwd.ticks=1, tck=tick, las=1)#
  ### axis label text#
  mtext(paste(textList$ylab1, " (", textList$units,")", sep=''), side=2, cex=labSize, line=labLine)#
  ### draw main text and subtitle text#
  mtext(textList$main_title, side=3, cex=labSize*1.4, line=labLine)#
  mtext(textList$subhead1, side=3, cex=labSize, line=labLine-1.3, font=3)#
  mtext(paste(textList$subhead2, round(population[length(population)], 1), textList$million, sep=' '), side=3, #
        cex=labSize, line=labLine-2.6, font=3)#
  # draw ablines up until the population line#
  for(i in seq(1,101,by=10)){#
    segments(years[i], 0, years[i], population[i], lwd=gridWidth, lty=3)#
  }#
  ### draw projection polygon#
  if(infoList$projection) {#
    y <- population[years > 2014]#
    x <- years[years > 2014]#
    y2 <- rep(y, each=2)#
    y2 <- y2[-length(y2)]#
    x2 <- rep(x, each=2)[-1]#
    x3 <- c(min(x2), x2, max(x2))#
    y3 <- c(0, y2, 0)#
    polygon(x3, y3, border=NA, col=rgb(0.95,0.95,0.95))#
  }#
  ##########################################
  ### change in population per year barplot#
  ##########################################
  par(fig=c(0,1,0,0.545), yaxs='i', xaxs='i', new=TRUE, lty=0)#
  ### calculate the percentage change from year to year#
  y <- diff(population)#
  y <- c(0, y)#
  percentChange <- 100 * y/population#
  ###for different colored bars#
  col1 <- '#91cebe'#
  col2 <- '#d8735b'#
  barColors <- c()#
  for(i in 1:length(percentChange)){#
    if(i > 64) {#
      barColors <- c(barColors, rgb(0.95,0.95,0.95))#
    }#
    else if(percentChange[i] > 0) {#
      barColors <- c(barColors, col1)#
    } else {#
      barColors <- c(barColors, col2)#
    }#
  }#
  ### make solid barplot of population change#
  barplot(head(percentChange, -1), space=0, axes=FALSE, #
          xlab=NA, ylab=NA, border=FALSE, col=barColors,#
          main=NA, ylim=range(-6, 10), xlim=range(0,length(years)-1), xpd=T)#
  ### draw axes#
  axis(side=3, at=c(0, length(percentChange)), labels=FALSE, line=axisLine, lwd.ticks=0)#
  axis(side=3, at=yearAt, labels=FALSE, line=axisLine, lwd=0, lwd.ticks=1, tck=tick)#
  axis(side=2, at=c(-6,10), line=axisLine, lwd.ticks=0, labels=FALSE)#
  axis(side=2, las=1, lwd=0, at=c(-6,-4,-2,0,2,4,6,8,10), #
       labels=c("-6%","-4%","-2%","0%","2%","4%","6%","8%","10%"), #
       lwd.ticks=1, cex.axis=axisSize, line=axisLine, tck=tick)#
  ### draw axis label#
  mtext(textList$ylab2, side=2, cex=labSize, line=labLine)#
  # draw ablines up until the population line#
  for(i in seq(0,100,by=10)){#
    segments(i, max(0,percentChange[i+1]), i, 10, lwd=gridWidth, lty=3)#
  }#
  lines(head(percentChange, -1), type='S', lty=1, xpd=T)#
  # plot information at bottom#
   mtext(textList$subtitle, side=1, line=2, cex=labSize)#
}#
#
popPlot(dataList, infoList, textList)#
#
dev.off()
